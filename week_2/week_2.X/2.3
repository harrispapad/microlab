#define F_CPU 16000000UL
#include<avr/io.h>
#include<avr/interrupt.h>
#include<util/delay.h>


volatile int check = 0;
volatile int running = 0;
volatile int count = 0;

ISR(INT1_vect)              // External INT1 ISR
{   if(running) {
	PORTB=0X0F;
	_delay_ms(500);
	count = 0;
}
check = 1;
EIFR = (1 << INTF1);    // Clear the  flag of interrupt INTF1
}

int main(){
	// Interrupt on rising edge of INT1 pin
	EICRA=(1<<ISC11) | (1<<ISC10);
	
	// Enable the INT1 interrupt (PD3))
	EIMSK= (1<<INT1);
	
	sei();                   // Enable global interrupts
	
	DDRB=0xFF;              // Set PORTB as output
	
	PORTB=0x00;             // Turn off all LEDs of PORTB
	
	while(1)
	{
		while(check) {
			while(count < 5000) {
				if(count==100) running = 1;
				PORTB = 0x01;
				_delay_ms(1);
				count++;
			}

			count = 0;
			PORTB=0x00;
			running = 0;
			check = 0;
		}
	}
}